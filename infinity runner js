Perfect! Hereâ€™s a **short external JS file** (`script.js`) for your **Infinity Runner** game.
Link it in your HTML with:

```html
<script src="script.js"></script>
```

---

### `script.js`

```javascript
(() => {
  const c = document.getElementById('game'), ctx = c.getContext('2d');
  const W = c.width, H = c.height, G = 0.7;
  let t = 0, score = 0, best = 0, speed = 4, playing = true;

  const player = { x: 80, y: H - 60, w: 28, h: 28, vy: 0, onGround: true };
  let obstacles = [];
  const clouds = Array.from({ length: 6 }, () => ({
    x: Math.random() * W, y: 30 + Math.random() * 80,
    w: 40 + Math.random() * 60, h: 10 + Math.random() * 10, s: 0.3 + Math.random() * 0.5
  }));

  function reset() {
    obstacles = []; score = 0; speed = 4; t = 0; playing = true;
    player.y = H - 60; player.vy = 0; player.onGround = true;
    document.getElementById('score').textContent = score;
  }

  function jump() {
    if (playing && player.onGround) { player.vy = -12; player.onGround = false; }
  }

  function spawnObstacle() {
    const h = 20 + Math.random() * 30;
    obstacles.push({ x: W + 20, y: H - 32, w: 20 + Math.random() * 20, h });
  }

  function rects(a, b) {
    return a.x < b.x + b.w && a.x + a.w > b.x &&
           a.y < b.y + b.h && a.y + a.h > b.y;
  }

  function gameOver() {
    playing = false; best = Math.max(best, score);
  }

  function update() {
    if (!playing) { draw(); return requestAnimationFrame(update); }

    t++; if (t % 300 === 0) speed += 0.4;

    // Player physics
    player.vy += G; player.y += player.vy;
    const groundY = H - 32 - player.h;
    if (player.y > groundY) { player.y = groundY; player.vy = 0; player.onGround = true; }

    // Obstacles
    if (!obstacles.length || obstacles.at(-1).x < W - 120 - Math.random() * 200) spawnObstacle();
    obstacles.forEach(o => o.x -= speed);
    obstacles = obstacles.filter(o => o.x + o.w > -10);
    obstacles.forEach(o => {
      if (rects(player, o)) gameOver();
      else if (!o.counted && o.x + o.w < player.x) {
        o.counted = true; score++;
        document.getElementById('score').textContent = score;
      }
    });

    // Clouds
    clouds.forEach(cl => { cl.x -= cl.s; if (cl.x + cl.w < 0) cl.x = W + Math.random() * 100; });

    draw();
    requestAnimationFrame(update);
  }

  function drawGround() {
    ctx.fillStyle = '#1a2742';
    ctx.fillRect(0, H - 32, W, 32);
    ctx.strokeStyle = '#2b3c65';
    for (let i = 0; i < W; i += 24) {
      ctx.beginPath(); ctx.moveTo(i, H - 32); ctx.lineTo(i + 8, H - 8); ctx.stroke();
    }
  }

  function draw() {
    ctx.clearRect(0, 0, W, H);

    // Stars
    for (let i = 0; i < 20; i++) {
      ctx.fillStyle = 'rgba(255,255,255,0.15)';
      ctx.fillRect((i * 37 + t) % W, 10 + (i * 17) % 120, 2, 2);
    }

    // Clouds
    ctx.fillStyle = 'rgba(255,255,255,0.15)';
    clouds.forEach(cl => ctx.fillRect(cl.x, cl.y, cl.w, cl.h));

    drawGround();

    // Player
    ctx.fillStyle = '#56e39f';
    ctx.fillRect(player.x, player.y, player.w, player.h);
    ctx.fillStyle = '#0b0e17';
    ctx.fillRect(player.x + 18, player.y + 8, 6, 6);

    // Obstacles
    ctx.fillStyle = '#ff6b6b';
    obstacles.forEach(o => ctx.fillRect(o.x, o.y - o.h, o.w, o.h));

    if (!playing) {
      ctx.fillStyle = '#fff'; ctx.font = '700 22px Arial';
      ctx.textAlign = 'center';
      ctx.fillText('Game Over', W / 2, H / 2 - 6);
      ctx.font = '14px Arial';
      ctx.fillText(`Score: ${score}   Best: ${best}   (Press R to Restart)`, W / 2, H / 2 + 18);
    }
  }

  // Controls
  addEventListener('keydown', e => {
    if (e.code === 'Space' || e.code === 'ArrowUp') jump();
    if (e.code === 'KeyR') reset();
  });
  c.addEventListener('pointerdown', jump);

  reset(); draw(); requestAnimationFrame(update);
})();
```

---

Would you also like me to **separate your HTML into a clean template** that links this CSS and JS file (so you have a neat 3-file project)?
